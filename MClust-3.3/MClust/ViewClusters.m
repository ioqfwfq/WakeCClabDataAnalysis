function ViewClusters()% ViewClusters% Control window for additional cluster viewing, key being% a 3d plot of spikes, colored by cluster.%% ADR 1998%% Status: PROMOTED (Release version) % See documentation for copyright (owned by original authors) and warranties (none!).% This code released as part of MClust 3.0.% Version control M3.0.
global MClust_Clusters MClust_FeatureNames MClust_FeatureData MClust_FeaturesToUse MClust_FeatureTimestamps MClust_TTData MClust_TTfn MClust_ChannelValidity
%--------------------% Alignment variables
uicWidth = 0.20;uicWidth0 = 0.05;uicWidth1 = 0.10;uicHeight = 0.05;XLocs = [0.1 0.4:uicWidth1:0.9];dY = uicHeight;YLocs = 0.9:-dY:0.1;
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% If, for instance when exporting from BBCLust, there are no feature timestamps, % generate them by getting them from either the TT data or from the file itself.%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%if isempty(MClust_FeatureTimestamps)    % determine if time is a feature. If so, assign MClust_featurestimestamps    % to that value.    time_index = 0;    n_features = length(MClust_FeaturesToUse);    for ii = 1:n_features        if strcmpi(MClust_FeaturesToUse{ii},'time')            time_index = ii;        end    end    % If time is a feaure, use it for FeatureTImestamps    if time_index        % Determine which column time is in the FD         index_in_FD = sum(MClust_ChannelValidity)*(n_features-1) + 1;        MClust_FeatureTimestamps = MClust_FeatureData(:,index_in_FD);    else        % if not, create time from the TT file or from the TTdata in memory.        if isempty(MClust_TTData)            %MClust_FeatureTimestamps = LoadTT0_nt(MClust_TTfn);            % REPLACED ADR 14 May 2002            MClust_FeatureTimestamps = MClust_LoadNeuralData(MClust_TTfn);        else            MClust_FeatureTimestamps = Range(MClust_TTData,'ts');        end    endend
%-------------------------------% figurefigHandle = figure(...   'Name', 'View Clusters',...   'NumberTitle', 'off', ...   'Tag', 'ViewClustersWindow', ...   'HandleVisibility', 'Callback',...   'CreateFcn', 'ViewClustersCallbacks',...   'Position', [10 60 400 650]);
% -------------------------------% axesif length(MClust_FeatureNames) < 3   errordlg('Must have more than three features to view in 3d.');   close(figHandle);   return;enduicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1) YLocs(1) uicWidth0 + uicWidth uicHeight], ...   'Style', 'text', 'String', 'Axes');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1) YLocs(2) uicWidth0 uicHeight], ...   'Style', 'text', 'String', ' X: ');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1)+uicWidth0 YLocs(2) uicWidth uicHeight],...   'Style', 'popupmenu', 'Tag', 'xdim', 'String', MClust_FeatureNames, ...   'Callback', 'ViewClustersCallbacks', 'Value', 1, ...   'TooltipString', 'Select x dimension');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1) YLocs(3) uicWidth0 uicHeight], ...   'Style', 'text', 'String', ' Y: ');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1)+uicWidth0 YLocs(3) uicWidth uicHeight],...   'Style', 'popupmenu', 'Tag', 'ydim', 'String', MClust_FeatureNames, ...   'Callback', 'ViewClustersCallbacks', 'Value', 2, ...   'TooltipString', 'Select y dimension');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1) YLocs(4) uicWidth0 uicHeight], ...   'Style', 'text', 'String', ' Z: ');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1)+uicWidth0 YLocs(4) uicWidth uicHeight],...   'Style', 'popupmenu', 'Tag', 'zdim', 'String', MClust_FeatureNames, ...   'Callback', 'ViewClustersCallbacks', 'Value', 3, ...   'TooltipString', 'Select z dimension');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1) YLocs(6) uicWidth+uicWidth0 uicHeight], ...   'Style', 'checkbox','Value', 0, 'Tag', 'RedrawAxes', 'String', 'Redraw Axes', ...   'Callback', 'ViewClustersCallbacks', ...   'TooltipString', 'If checked, redraw axes with each update.  Uncheck and recheck to redraw axes now.');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1) YLocs(7) uicWidth+uicWidth0 uicHeight], ...   'Style', 'checkbox','Value', 0, 'Tag', 'Rotate', 'String', 'Rotate', 'Callback', 'ViewClustersCallbacks', ...   'TooltipString', 'Rotate 3d window');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1) YLocs(8) uicWidth+uicWidth0 uicHeight], ...   'Style', 'pushbutton','Tag', 'AxLimDlg', 'String', 'Edit axes', 'Callback', 'ViewClustersCallbacks', ...   'TooltipString', 'Change axis parameters');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1) YLocs(10) uicWidth+uicWidth0 uicHeight], ...   'Style', 'pushbutton', 'String', 'Hide all clusters', 'Tag', 'HideAll', 'Callback', 'ViewClustersCallbacks', ...   'TooltipString', 'Hide all clusters');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1) YLocs(11) uicWidth+uicWidth0 uicHeight], ...   'Style', 'pushbutton', 'String', 'Show all clusters', 'Tag', 'ShowAll', 'Callback', 'ViewClustersCallbacks', ...   'TooltipString', 'Show all clusters');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1) YLocs(12) uicWidth+uicWidth0 uicHeight], ...   'Style', 'pushbutton','Tag', 'UpdateClusters', 'String', 'Update Clusters', 'Callback', 'ViewClustersCallbacks', ...   'TooltipString', 'Update clusters from global set');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1) YLocs(14) uicWidth+uicWidth0 uicHeight], ...   'Style', 'pushbutton','Tag', 'CheckClusters', 'String', 'Check clusters', 'Callback', 'ViewClustersCallbacks', ...   'TooltipString', 'Check all clusters');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1) YLocs(15) uicWidth+uicWidth0 uicHeight], ...   'Style', 'pushbutton','Tag', 'EvalOverlap', 'String', 'Eval overlap', 'Callback', 'ViewClustersCallbacks', ...   'TooltipString', 'Eval overlap between all cluster pairs');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(1) YLocs(end) uicWidth+uicWidth0 uicHeight], ...   'Style', 'pushbutton','Tag', 'Exit', 'String', 'Exit', 'Callback', 'ViewClustersCallbacks', ...   'TooltipString', 'Return to main window');uicontrol('Parent', figHandle, ...   'Units', 'Normalized', 'Position', [XLocs(end) YLocs(end) uicWidth0/2 16 * dY], ...   'Style', 'slider', 'Tag', 'ScrollClusters', 'Callback', 'ViewClustersCallbacks', ...   'Value', 0', 'Min', -99, 'Max', 0, ...   'TooltipString', 'Scroll clusters');

